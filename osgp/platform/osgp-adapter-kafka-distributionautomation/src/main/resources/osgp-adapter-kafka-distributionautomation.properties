# =========================================================
# PERSISTENCE CONFIG
# =========================================================

#Database Configuration
db.username=osp_admin
db.password=1234

db.username.core=osgp_read_only_ws_user
db.password.core=1234

#PostgreSQL
db.driver=org.postgresql.Driver
db.protocol=jdbc:postgresql://

db.host=localhost
db.port=5432
db.name=osgp_adapter_kafka_distributionautomation

db.host.core=localhost
db.port.core=5432
db.name.core=osgp_core

db.min_pool_size=1
db.max_pool_size=2
db.auto_commit=false
db.idle_timeout=120000

#Hibernate Configuration
hibernate.dialect=org.hibernate.dialect.PostgreSQL94Dialect
hibernate.format_sql=true
hibernate.physical_naming_strategy=org.opensmartgridplatform.shared.application.config.HibernateNamingStrategy
hibernate.show_sql=false

#Flyway configuration
flyway.initial.version=20170508125403122
flyway.initial.description=Initial version PostgreSQL
flyway.init.on.migrate=true

#EntityManager
#Declares the base package of the entity classes
entitymanager.packages.to.scan=org.opensmartgridplatform.adapter.ws.domain.entities
entitymanager.packages.to.scan.core=org.opensmartgridplatform.domain.da.entities,org.opensmartgridplatform.domain.core.entities

# =========================================================
# KAFKA CONFIG
# =========================================================
distributionautomation.kafka.common.properties.prefix=distributionautomation.kafka

# Example configuration of multiple servers for use in acceptance or production environments
#distributionautomation.kafka.bootstrap.servers=localhost:9092,localhost:9093
distributionautomation.kafka.bootstrap.servers=localhost:9092

distributionautomation.kafka.topic=m_LvMeasurementPublishedEventGXF_dev
distributionautomation.kafka.producer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
distributionautomation.kafka.producer.value.serializer=org.opensmartgridplatform.adapter.kafka.da.serialization.GridMeasurementPublishedEventSerializer

# Example Kafka SSL configuration for use in acceptance or production environments
#distributionautomation.kafka.security.protocol=SSL
#distributionautomation.kafka.ssl.truststore.location=/etc/osp/kafka/kafka.client.truststore.jks
#distributionautomation.kafka.ssl.truststore.password=confluent
#distributionautomation.kafka.ssl.keystore.location=/etc/osp/kafka/kafka.client.keystore.jks
#distributionautomation.kafka.ssl.keystore.password=confluent
#distributionautomation.kafka.ssl.key.password=confluent
#distributionautomation.kafka.ssl.endpoint.identification.algorithm=

peakshaving.kafka.common.properties.prefix=peakshaving.kafka

peakshaving.kafka.bootstrap.servers=localhost:9092

peakshaving.kafka.topic=g_osgp_distributionautomation_peakshaving_dev
peakshaving.kafka.producer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
peakshaving.kafka.producer.value.serializer=org.apache.kafka.common.serialization.StringSerializer


# =========================================================
# MESSAGING CONFIG
# =========================================================
# ---------------------------------------------------------
# jms.default
# ---------------------------------------------------------
#jms.default.broker.url=failover:(ssl://localhost:61617)
jms.default.broker.url=failover:(tcp://localhost:61616)

# ---------------------------------------------------------
# jms.outbound.domain.requests
# ---------------------------------------------------------
jms.outbound.domain.requests.queue=domain-distributionautomation.1_0.kafka-distributionautomation.1_0.requests

# ---------------------------------------------------------
# jms.inbound.domain.responses
# ---------------------------------------------------------
jms.inbound.domain.responses.queue=kafka-distributionautomation.1_0.domain-distributionautomation.1_0.responses

# ---------------------------------------------------------
# jms.outbound.logging.requests
# ---------------------------------------------------------
jms.outbound.logging.requests.queue=osgp.logging.ws

# =========================================================
# SCHEDULING CONFIG
# =========================================================

quartz.scheduler.thread.count=2

## Production (every day at 10:00 AM) ->  0 0 10 * * ?
## Test (every minute)                  ->  0 0/1 * * * ?
distributionautomation.scheduling.job.cleanup.response.data.cron.expression=0 0/1 * * * ?
distributionautomation.scheduling.job.cleanup.response.data.retention.time.in.days=7

distributionautomation.scheduling.job.resend.notification.cron.expression=0 0/1 * * * ?
distributionautomation.scheduling.job.resend.notification.pool.size=1
distributionautomation.scheduling.job.resend.notification.resend.threshold.in.minutes=2
distributionautomation.scheduling.job.resend.notification.multiplier=2
distributionautomation.scheduling.job.resend.notification.maximum=3
distributionautomation.scheduling.job.resend.notification.page.size=100
