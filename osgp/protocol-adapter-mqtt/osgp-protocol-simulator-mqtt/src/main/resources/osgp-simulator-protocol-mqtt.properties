mqtt.simulator.spec=mqtt_simulator_peak_shaving_spec.json
# Start a client publishing the messages from the JSON spec or not
mqtt.simulator.startClient=true

mqtt.simulator.broker.host=localhost
mqtt.simulator.broker.port=1883

mqtt.simulator.ssl.enabled=true

mqtt.simulator.broker.ssl.port=8883
mqtt.simulator.broker.ssl.provider=JDK
# Broker keystore could be loaded from external file:
#mqtt.simulator.broker.ssl.keystore.location=/etc/osp/keys/mqtt/mqtt_broker_keystore.jks
# or use a default from classpath for local development/testing:
mqtt.simulator.broker.ssl.keystore.location=mqtt_broker_keystore.jks
mqtt.simulator.broker.ssl.keystore.password=123456
mqtt.simulator.broker.ssl.keymanager.password=123456

# Truststore could be loaded from external file (using "file:" prefix):
#mqtt.simulator.client.ssl.truststore.location=file:/etc/osp/keys/mqtt/mqtt_client_truststore.jks
# or use a default from classpath (using "classpath:" prefix) for local development/testing:
mqtt.simulator.client.ssl.truststore.location=classpath:mqtt_client_truststore.jks
mqtt.simulator.client.ssl.truststore.password=123456
mqtt.simulator.client.ssl.truststore.type=JKS
mqtt.simulator.client.ssl.authentication.enabled=false
