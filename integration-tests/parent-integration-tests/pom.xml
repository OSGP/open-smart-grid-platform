<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015 Smart Society Services B.V.

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>parent-integration-tests</artifactId>
  <packaging>pom</packaging>
  <name>parent-integration-tests</name>
  <description>Parent module.</description>
  <parent>
    <groupId>org.opensmartgridplatform</groupId>
    <artifactId>super-osgp</artifactId>
    <version>5.5.3</version>
    <relativePath>../../super/pom.xml</relativePath>
  </parent>
  <distributionManagement>
    <site>
      <id>parent-integration-tests</id>
      <name>parent-integration-tests</name>
      <!-- URL is passed in as a maven argument: -Dmaven.site.distributionManagement.site.url=file:////the/path/to/deploy/the/site/to -->
      <url>${maven.site.distributionManagement.site.url}</url>
    </site>
  </distributionManagement>

  <properties>
    <!-- Default always skip integration tests, to ensure all developer data
      is retained -->
    <skipITs>true</skipITs>

    <!-- Skip code coverage gathering with Jacoco on IT tests from Tomcat.
      Requires jacoco-agent to be setup on remote Tomcat -->
    <skipITCoverage>true</skipITCoverage>

    <!-- Default always skip creating a test jar with dependencies tests -->
    <skipTestJarWithDependenciesAssembly>true</skipTestJarWithDependenciesAssembly>

    <!-- Address of Tomcat instance -->
    <addressITCoverage>localhost</addressITCoverage>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-admin</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-core</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-distributionautomation</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-microgrids</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-publiclighting</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-tariffswitching</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-smartmetering</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-domain-distributionautomation</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-protocol-adapter-iec60870</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-protocol-simulator-iec60870</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-protocol-adapter-mqtt</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-protocol-simulator-mqtt</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-domain-microgrids</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-protocol-adapter-iec61850</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-protocol-simulator-iec61850</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-protocol-adapter-dlms</artifactId>
        <version>${osgp.dlms.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-secret-management</artifactId>
        <version>${osgp.dlms.version}</version>
        <classifier>classes</classifier>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven.project.info.reports.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>${jxr.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven.site.plugin}</version>
        </plugin>

        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${license.maven.plugin}</version>
          <configuration>
            <header>${license.maven.plugin.location}</header>
            <properties>
              <owner>Mycila</owner>
              <email>mathieu.carbou@gmail.com</email>
            </properties>
            <excludes>
              <exclude>**/README.md</exclude>
              <exclude>src/test/resources/**</exclude>
              <exclude>src/main/resources/**</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
          <configuration>
            <argLine>${surefireArgLine}</argLine>
            <excludes>
              <!-- Cucumber integration tests, included with Failsafe. -->
              <exclude>**/cucumber/**/AcceptanceTests.java</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven.failsafe.plugin.version}</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <skipITs>${skipITs}</skipITs>
            <includes>
              <!-- Cucumber integration tests, excluded with Surefire. -->
              <include>**/cucumber/**/AcceptanceTests.java</include>
            </includes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven.assembly.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
          <version>${maven.compiler.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven.javadoc.version}</version>
          <configuration>
            <additionalparam>-Xdoclint:none</additionalparam>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar.plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <executions>
            <!-- Prepares the property pointing to the JaCoCo runtime agent
              which is passed as VM argument when Maven the Surefire plugin is executed. -->
            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution
                  data. -->
                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                <!-- Sets the name of the property containing the settings
                  for JaCoCo runtime agent. -->
                <propertyName>surefireArgLine</propertyName>
                <skipTests>${skipTests}</skipTests>
              </configuration>
            </execution>
            <execution>
              <id>default-report</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution
                  data. -->
                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                <!-- Sets the output directory for the code coverage report. -->
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                <skipTests>${skipTests}</skipTests>
              </configuration>
            </execution>
            <!-- Ensures that the code coverage report for unit tests is
              created after unit tests have been run. -->
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution
                  data. -->
                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                <!-- Sets the output directory for the code coverage report. -->
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                <skipTests>${skipTests}</skipTests>
              </configuration>
            </execution>
            <!-- Reset the code coverage before the integration tests are
              started. Ensures Tomcat startup code execution is ignored in report -->
            <execution>
              <id>pre-integration-test</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>dump</goal>
              </goals>
              <configuration>
                <address>${addressITCoverage}</address>
                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                <dump>false</dump>
                <append>false</append>
                <reset>true</reset>
                <skip>${skipITCoverage}</skip>
              </configuration>
            </execution>
            <!-- Download code coverage from Tomcat -->
            <execution>
              <id>post-integration-test</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>dump</goal>
              </goals>
              <configuration>
                <address>${addressITCoverage}</address>
                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                <dump>true</dump>
                <append>false</append>
                <reset>true</reset>
                <skip>${skipITCoverage}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven.project.info.reports.plugin.version}</version>
        <configuration>
          <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${jxr.version}</version>
      </plugin>
    </plugins>
  </reporting>
</project>
