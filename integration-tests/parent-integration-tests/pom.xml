<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015 Smart Society Services B.V.

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>parent-integration-tests</artifactId>
  <groupId>org.opensmartgridplatform</groupId>
  <version>4.35.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>parent-integration-tests</name>
  <!-- Description, Organization, Licences, URL and Distribution Management 
    elements are needed for the maven-jxr-plugin to generate a maven site -->
  <description>Parent module.</description>
  <organization>
    <name>OSGP</name>
    <url>https://osgplatform.wordpress.com</url>
  </organization>
  <licenses>
    <license>
      <name>APACHE 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
    </license>
  </licenses>
  <!-- URL is passed in as a maven argument: -Dmaven.site.url=http://my/url/for/the/site -->
  <url>${maven.site.url}</url>
  <distributionManagement>
    <site>
      <id>parent-integration-tests</id>
      <name>parent-integration-tests</name>
      <!-- URL is passed in as a maven argument: -Dmaven.site.distributionManagement.site.url=file:////the/path/to/deploy/the/site/to -->
      <url>${maven.site.distributionManagement.site.url}</url>
    </site>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <module.baseUri>${project.baseUri}/../</module.baseUri>
    <osgp.version>${project.version}</osgp.version>
    <osgp.dlms.version>${project.version}</osgp.dlms.version>
    <osgp.iec61850.simulator.version>${project.version}</osgp.iec61850.simulator.version>
    <spring.version>4.3.18.RELEASE</spring.version>
    <spring.ws.version>2.4.0.RELEASE</spring.ws.version>
    <spring.data.version>1.11.16.RELEASE</spring.data.version>
    <spring.data.key.version>1.2.16.RELEASE</spring.data.key.version>
    <spring.data.commons.version>1.13.16.RELEASE</spring.data.commons.version>
    <spring.security.version>4.2.4.RELEASE</spring.security.version>
    <servlet.version>3.0.1</servlet.version>
    <servlet.jstl.version>1.2</servlet.jstl.version>
    <protobuf.version>2.4.1</protobuf.version>
    <postgresql.version>9.3-1102-jdbc41</postgresql.version>
    <hibernate.version>4.2.16.Final</hibernate.version>
    <hibernate.validator.version>4.3.1.Final</hibernate.validator.version>
    <hibernate.jpa.version>1.0.1.Final</hibernate.jpa.version>
    <hikari.version>2.6.0</hikari.version>
    <junit.version>4.12</junit.version>
    <joda.version>2.4</joda.version>
    <bonecp.version>0.8.0.RELEASE</bonecp.version>
    <slf4j.version>1.7.7</slf4j.version>
    <apache.commons.lang.version>3.3.2</apache.commons.lang.version>
    <apache.httpcomponents.version>4.3.6</apache.httpcomponents.version>
    <apache.httpcomponents.httpcore.version>4.4.6</apache.httpcomponents.httpcore.version>
    <jackson.version>2.9.8</jackson.version>
    <commons.codec.version>1.9</commons.codec.version>
    <orika.version>1.5.1</orika.version>
    <netty.version>3.9.4.Final</netty.version>
    <givwenzen.version>1.0.2</givwenzen.version>
    <checkstyle.version>2.12.1</checkstyle.version>
    <pmd.version>3.8</pmd.version>
    <findbug.version>3.0.0</findbug.version>
    <apache.activemq.version>5.15.7</apache.activemq.version>
    <commons.pool.version>1.6</commons.pool.version>
    <proton-jms.version>0.7</proton-jms.version>
    <cxf.version>3.0.1</cxf.version>
    <logback.version>1.2.3</logback.version>
    <logback.ext.version>0.1.4</logback.ext.version>
    <SunriseSunsetCalculator.version>1.1</SunriseSunsetCalculator.version>
    <mockito.version>1.9.5</mockito.version>
    <apache.commons.schema>2.0.3</apache.commons.schema>
    <jxr.version>2.5</jxr.version>
    <maven.project.info.reports.plugin.version>3.0.0</maven.project.info.reports.plugin.version>
    <maven.site.plugin>3.7.1</maven.site.plugin>
    <maven.compiler.plugin.version>3.6.0</maven.compiler.plugin.version>
    <license.maven.plugin>2.11</license.maven.plugin>
    <cucumber.version>1.2.5</cucumber.version>
    <maven.jar.plugin.version>3.0.2</maven.jar.plugin.version>
    <maven.surefire.plugin.version>2.19.1</maven.surefire.plugin.version>
    <maven.failsafe.plugin.version>2.19.1</maven.failsafe.plugin.version>
    <jgoodies.version>1.0.5</jgoodies.version>
    <jacoco.version>0.7.9</jacoco.version>
    <selenium.java.version>3.4.0</selenium.java.version>
    <sun.httpserver.version>20070405</sun.httpserver.version>
    <maven.javadoc.version>2.10.4</maven.javadoc.version>
    <ant.junit.version>1.10.1</ant.junit.version>
    <args4j.version>2.33</args4j.version>
    <maven.assembly.plugin.version>3.0.0</maven.assembly.plugin.version>

    <!-- Default always skip integration tests, to ensure all developer data 
      is retained -->
    <skipITs>true</skipITs>

    <!-- Skip code coverage gathering with Jacoco on IT tests from Tomcat. 
      Requires jacoco-agent to be setup on remote Tomcat -->
    <skipITCoverage>true</skipITCoverage>
    
    <!-- Default always skip creating a test jar with dependencies tests -->
    <skipTestJarWithDependenciesAssembly>true</skipTestJarWithDependenciesAssembly>

    <!-- Address of Tomcat instance -->
    <addressITCoverage>localhost</addressITCoverage>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- OSGP -->
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>oslp</artifactId>
        <version>${osgp.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-dto</artifactId>
        <version>${osgp.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>shared</artifactId>
        <version>${osgp.version}</version>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-domain-core</artifactId>
        <version>${osgp.version}</version>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-domain-microgrids</artifactId>
        <version>${osgp.version}</version>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-admin</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-core</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-shared</artifactId>
        <version>${osgp.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-shared-db</artifactId>
        <version>${osgp.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-microgrids</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-publiclighting</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-tariffswitching</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-ws-smartmetering</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-domain-shared</artifactId>
        <version>${osgp.version}</version>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-domain-admin</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-domain-core</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-domain-microgrids</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-domain-publiclighting</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-domain-tariffswitching</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-adapter-domain-smartmetering</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-core</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-core-db-api</artifactId>
        <version>${osgp.version}</version>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-logging</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-domain-logging</artifactId>
        <version>${osgp.version}</version>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-protocol-adapter-oslp-elster</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>signing-server</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-protocol-adapter-dlms</artifactId>
        <version>${osgp.dlms.version}</version>
        <classifier>classes</classifier>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-protocol-adapter-iec61850</artifactId>
        <version>${osgp.version}</version>
        <classifier>classes</classifier>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>osgp-protocol-simulator-iec61850</artifactId>
        <version>${osgp.iec61850.simulator.version}</version>
        <classifier>classes</classifier>
      </dependency>

      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>cucumber-tests-core</artifactId>
        <version>${osgp.version}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>cucumber-tests-execution</artifactId>
        <version>${osgp.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>cucumber-tests-platform</artifactId>
        <version>${osgp.version}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opensmartgridplatform</groupId>
        <artifactId>cucumber-tests-platform-common</artifactId>
        <version>${osgp.version}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>

      <!-- Spring Framework -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- Spring WS -->
      <dependency>
        <groupId>org.springframework.ws</groupId>
        <artifactId>spring-ws-core</artifactId>
        <version>${spring.ws.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.ws</groupId>
        <artifactId>spring-ws-security</artifactId>
        <version>${spring.ws.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.ws</groupId>
        <artifactId>spring-ws-support</artifactId>
        <version>${spring.ws.version}</version>
      </dependency>

      <!-- Spring JMS -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jms</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- Spring Data -->
      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-jpa</artifactId>
        <version>${spring.data.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-commons</artifactId>
        <version>${spring.data.commons.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-keyvalue</artifactId>
        <version>${spring.data.key.version}</version>
      </dependency>

      <!-- Spring Security -->
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-core</artifactId>
        <version>${spring.security.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-web</artifactId>
        <version>${spring.security.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-config</artifactId>
        <version>${spring.security.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hibernate.javax.persistence</groupId>
        <artifactId>hibernate-jpa-2.0-api</artifactId>
        <version>${hibernate.jpa.version}</version>
      </dependency>

      <!-- Servlet API 3.0 -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${servlet.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>${servlet.jstl.version}</version>
      </dependency>

      <!-- Google Protocol Buffers -->
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>

      <!-- Joda Time (Date/Time functions) -->
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda.version}</version>
      </dependency>

      <dependency>
        <groupId>args4j</groupId>
        <artifactId>args4j</artifactId>
        <version>${args4j.version}</version>
      </dependency>


      <!-- PostgreSQL -->
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>

      <!-- Hibernate -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-entitymanager</artifactId>
        <version>${hibernate.version}</version>
      </dependency>

      <!-- Hibernate validator -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${hibernate.validator.version}</version>
      </dependency>

      <!-- BoneCP (Connection pooling) -->
      <dependency>
        <groupId>com.jolbox</groupId>
        <artifactId>bonecp</artifactId>
        <version>${bonecp.version}</version>
      </dependency>

      <!-- Jackson (JSON) -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <!-- Jakarta commons codec -->
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons.codec.version}</version>
      </dependency>

      <!-- Apache HTTP client -->
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${apache.httpcomponents.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpcore</artifactId>
        <version>${apache.httpcomponents.httpcore.version}</version>
      </dependency>

      <!-- Apache MQ client -->
      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-client</artifactId>
        <version>${apache.activemq.version}</version>
        <!-- Exclude the non-client JAR files -->
        <exclusions>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activeio-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.activemq</groupId>
            <artifactId>kahadb</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.activemq.protobuf</groupId>
            <artifactId>activemq-protobuf</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.fusesource.mqtt-client</groupId>
            <artifactId>mqtt-client</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.fusesource.fuse-extra</groupId>
            <artifactId>fusemq-leveldb</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-spring</artifactId>
        <version>${apache.activemq.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-pool</artifactId>
        <version>${apache.activemq.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-pool</groupId>
        <artifactId>commons-pool</artifactId>
        <version>${commons.pool.version}</version>
      </dependency>

      <!-- Orika (mapping framework) -->
      <dependency>
        <groupId>ma.glasnost.orika</groupId>
        <artifactId>orika-core</artifactId>
        <version>${orika.version}</version>
      </dependency>

      <!-- Testing dependencies -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.ant</groupId>
        <artifactId>ant-junit</artifactId>
        <version>${ant.junit.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${mockito.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${apache.commons.lang.version}</version>
      </dependency>

      <!-- Logging dependencies -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>org.logback-extensions</groupId>
        <artifactId>logback-ext-spring</artifactId>
        <version>${logback.ext.version}</version>
      </dependency>

      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty</artifactId>
        <version>${netty.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP</artifactId>
        <version>${hikari.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>com.googlecode.givwenzen</groupId>
        <artifactId>givwenzen</artifactId>
        <version>${givwenzen.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${license.maven.plugin}</version>
      </dependency>
      <!-- Cucumber Framework -->
      <dependency>
        <groupId>info.cukes</groupId>
        <artifactId>cucumber-junit</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>info.cukes</groupId>
        <artifactId>cucumber-java</artifactId>
        <version>${cucumber.version}</version>
      </dependency>
      <dependency>
        <groupId>info.cukes</groupId>
        <artifactId>cucumber-core</artifactId>
        <version>${cucumber.version}</version>
      </dependency>
      <dependency>
        <groupId>info.cukes</groupId>
        <artifactId>cucumber-spring</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>jgoodies</groupId>
        <artifactId>forms</artifactId>
        <version>${jgoodies.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.net.httpserver</groupId>
        <artifactId>http</artifactId>
        <version>${sun.httpserver.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-java</artifactId>
        <version>${selenium.java.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${checkstyle.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${pmd.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>${findbug.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven.project.info.reports.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>${jxr.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven.site.plugin}</version>
        </plugin>

        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${license.maven.plugin}</version>
          <configuration>
            <header>${license.maven.plugin.location}</header>
            <properties>
              <owner>Mycila</owner>
              <email>mathieu.carbou@gmail.com</email>
            </properties>
            <excludes>
              <exclude>**/README.md</exclude>
              <exclude>src/test/resources/**</exclude>
              <exclude>src/main/resources/**</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
          <configuration>
            <argLine>${surefireArgLine}</argLine>
            <excludes>
              <!-- Cucumber integration tests, included with Failsafe. -->
              <exclude>**/cucumber/**/AcceptanceTests.java</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven.failsafe.plugin.version}</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <skipITs>${skipITs}</skipITs>
            <includes>
              <!-- Cucumber integration tests, excluded with Surefire. -->
              <include>**/cucumber/**/AcceptanceTests.java</include>
            </includes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven.assembly.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
          <version>${maven.compiler.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven.javadoc.version}</version>
          <configuration>
            <additionalparam>-Xdoclint:none</additionalparam>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar.plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <executions>
            <!-- Prepares the property pointing to the JaCoCo runtime agent 
              which is passed as VM argument when Maven the Surefire plugin is executed. -->
            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution 
                  data. -->
                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                <!-- Sets the name of the property containing the settings 
                  for JaCoCo runtime agent. -->
                <propertyName>surefireArgLine</propertyName>
                <skipTests>${skipTests}</skipTests>
              </configuration>
            </execution>
            <execution>
              <id>default-report</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution 
                  data. -->
                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                <!-- Sets the output directory for the code coverage report. -->
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                <skipTests>${skipTests}</skipTests>
              </configuration>
            </execution>
            <!-- Ensures that the code coverage report for unit tests is 
              created after unit tests have been run. -->
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution 
                  data. -->
                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                <!-- Sets the output directory for the code coverage report. -->
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                <skipTests>${skipTests}</skipTests>
              </configuration>
            </execution>
            <!-- Reset the code coverage before the integration tests are 
              started. Ensures Tomcat startup code execution is ignored in report -->
            <execution>
              <id>pre-integration-test</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>dump</goal>
              </goals>
              <configuration>
                <address>${addressITCoverage}</address>
                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                <dump>false</dump>
                <append>false</append>
                <reset>true</reset>
                <skip>${skipITCoverage}</skip>
              </configuration>
            </execution>
            <!-- Download code coverage from Tomcat -->
            <execution>
              <id>post-integration-test</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>dump</goal>
              </goals>
              <configuration>
                <address>${addressITCoverage}</address>
                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                <dump>true</dump>
                <append>false</append>
                <reset>true</reset>
                <skip>${skipITCoverage}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven.project.info.reports.plugin.version}</version>
        <configuration>
          <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${jxr.version}</version>
      </plugin>
    </plugins>
  </reporting>
</project>
