db.name.osgp_adapter_ws_distributionautomation=osgp_adapter_ws_distributionautomation
db.name.osgp_adapter_protocol_iec60870=osgp_adapter_protocol_iec60870
db.name.osgp_adapter_protocol_mqtt=osgp_adapter_protocol_mqtt

entitymanager.packages.to.scan.core=org.opensmartgridplatform.domain.core.entities, org.opensmartgridplatform.domain.distributionautomation.entities
entitymanager.packages.to.scan.iec60870=org.opensmartgridplatform.adapter.protocol.iec60870.domain.entities
entitymanager.packages.to.scan.mqtt=org.opensmartgridplatform.adapter.protocol.mqtt.domain.entities
entitymanager.packages.to.scan.ws.distributionautomation=org.opensmartgridplatform.adapter.ws.domain.entities

#IEC60870
iec60870.mock.port=62404
iec60870.mock.networkaddress=${server.domain}
iec60870.mock.connection.timeout=5000

# When waiting for response notification for a correlation UID retrieved
# earlier, what is the maximum duration in milliseconds after which a test
# will fail.
iec60870.rtu.response.wait.fail.duration=60000

web.service.template.default.uri.distributionautomation.devicemanagement=osgp-adapter-ws-distributionautomation/distributionautomation/deviceManagement
jaxb2.marshaller.context.path.distributionautomation.devicemanagement=org.opensmartgridplatform.adapter.ws.schema.distributionautomation.generic
jaxb2.marshaller.context.path.distributionautomation.notification=org.opensmartgridplatform.adapter.ws.schema.distributionautomation.notification

#Notification service
web.service.notification.context=/notifications
web.service.notification.port=8088

# kafka peak shaving
peakshaving.kafka.common.properties.prefix=peakshaving.kafka
peakshaving.kafka.bootstrap.servers=localhost:9092
peakshaving.kafka.topic=m_LvMeasurementPublishedEventGXF_dev

peakshaving.kafka.consumer.wait.fail.duration:90000

peakshaving.kafka.consumer.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
peakshaving.kafka.consumer.value.deserializer=org.opensmartgridplatform.adapter.kafka.da.serialization.MessageDeserializer
peakshaving.kafka.consumer.group.id=PeakShavingCucumberConsumer
peakshaving.kafka.consumer.enable.auto.commit=true
peakshaving.kafka.consumer.poll.timeout=3000
peakshaving.kafka.consumer.concurrency=1
peakshaving.kafka.consumer.auto.offset.reset=latest
